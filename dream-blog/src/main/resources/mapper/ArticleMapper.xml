<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dream.blog.mapper.ArticleMapper">
    <cache eviction="LRU" flushInterval="60000" readOnly="true"/>
    <resultMap id="article" type="com.dream.blog.domain.dto.ArticleItem">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="categoryId" property="categoryId" jdbcType="INTEGER"/>
		<result column="categoryCode" property="categoryCode" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="abstractContent" property="abstractContent" jdbcType="VARCHAR"/>
        <result column="publishTime" property="publishTime" jdbcType="VARCHAR"/>
        <result column="articleTags" property="articleTags" jdbcType="VARCHAR"/>
        <result column="openComment" property="openComment" jdbcType="INTEGER"/>
        <result column="isRecommend" property="isRecommend" jdbcType="INTEGER"/>
        <result column="viewCount" property="viewCount" jdbcType="INTEGER"/>
        <result column="showStyle" property="showStyle" jdbcType="INTEGER"/>
        <result column="articleType" property="articleType" jdbcType="INTEGER"/>
        <result column="editorType" property="editorType" jdbcType="INTEGER"/>
        <association property="category" column="categoryId" jdbcType="INTEGER" resultMap="category"/>
		<collection property="coverImageList" column="id" javaType="ArrayList"
                    ofType="com.dream.blog.domain.entity.ArticleFile" select="getImageById"/>
    </resultMap>
    <resultMap id="category" type="com.dream.blog.domain.entity.Category">
		<id column="id" property="id" jdbcType="INTEGER"/>
        <result column="categoryName" property="categoryName" jdbcType="VARCHAR"/>
        <result column="categoryCode_c" property="categoryCode_c" jdbcType="VARCHAR"/>
        <result column="fullName" property="fullName" jdbcType="VARCHAR"/>
        <result column="parentId" property="parentId" jdbcType="INTEGER"/>
        <result column="isParent" property="isParent" jdbcType="INTEGER"/>
        <result column="path" property="path" jdbcType="VARCHAR"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="articleTag" type="com.dream.blog.domain.entity.ArticleTag">
		<id column="articleId" property="articleId" jdbcType="INTEGER"/>
        <result column="tagId" property="tagId" jdbcType="INTEGER"/>
        <result column="tagName" property="tagName" jdbcType="VARCHAR"/>
    </resultMap>
	<resultMap id="articleDetail" type="com.dream.blog.domain.entity.ArticleDetail">
		<id column="articleId" property="articleId" jdbcType="INTEGER"/>
		<result column="content" property="content" jdbcType="VARCHAR"/>
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>
	<resultMap id="articleFile" type="com.dream.blog.domain.entity.ArticleFile">
		<id column="articleId" property="articleId" jdbcType="INTEGER"/>
		<result column="coverImage" property="coverImage" jdbcType="VARCHAR"/>
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>
    <sql id="Base_Column_List">
		a.id,a.categoryId,a.categoryCode,c.categoryName,c.fullName,a.title,a.abstractContent,a.publishTime,a.articleTags,a.openComment,a.articleType,a.editorType,a.isRecommend,a.status,a.author,a.createTime,a.updateTime,a.viewCount,a.showStyle
	</sql>
	<sql id="Abstract_Column_List">
		a.id,a.categoryId,a.categoryCode,c.categoryName,c.fullName,a.title,a.abstractContent,a.publishTime,a.articleTags,a.articleType,a.editorType,a.isRecommend,a.status,a.author,a.createTime,a.updateTime,a.viewCount,a.showStyle
	</sql>
	<sql id="article_Column_List">
		a.id,a.categoryId,a.categoryCode,a.title,a.abstractContent,a.publishTime,a.articleTags,a.articleType,a.editorType,a.isRecommend,a.status,a.author,a.createTime,a.updateTime,a.viewCount,a.showStyle
	</sql>
	<sql id="Where_Clause" >
	    <where >
	     	<if test="title!= null and title!= ''">
	      		and a.title like concat('%',#{title},'%')
	      	</if>
	      	<if test="categoryId != null and categoryId != ''">
           		and a.categoryId = #{categoryId,jdbcType=INTEGER}
        	</if>
			<if test="categoryCodes != null and categoryCodes.size()>0">
				and(
				<foreach collection="categoryCodes" item="item" index="index"  separator="OR">
					a.categoryCode LIKE CONCAT(#{item},'%')
				</foreach>
				)
			</if>
			<if test="tag!= null and tag!= ''">
				and find_in_set(#{tag},a.articleTags)
			</if>
        	 <choose>
	           <when test="status != null and status != '' or 0 == status">
	       	      and a.status = #{status,jdbcType=INTEGER}
	       	   </when>
	       	   <otherwise>  
	              and a.status !=-1 
	           </otherwise>  
	       	</choose>
	    </where>
	 </sql>
    <!--分页获取文章-->
    <select id="getArticleList" resultMap="article">
	select
	<include refid="Abstract_Column_List" />
	from blog_article a left join blog_category c on a.categoryCode=c.CategoryCode
	<include refid="Where_Clause" />
	<choose>
		<when test="sort ==0" >
			order by a.updateTime asc
		</when>
		<when test="sort == 1" >
			order by a.updateTime desc
		</when>
		<otherwise>
			order by a.updateTime desc
		</otherwise>
	</choose>
</select>
	<select id="getRelvantArticle" resultType="map">
		select id,title,publishTime from blog_article where id!=#{articleId} and  articleTags in(${tagIds}) limit 5
	</select>
	<select id="getContentById" resultMap="articleDetail">
		select articleId,content,createTime,updateTime  from blog_article_detail where articleId=#{articleId}
	</select>
	<select id="getImageById" resultMap="articleFile">
		select articleId,coverImage,createTime,updateTime  from blog_article_file where articleId=#{articleId}
	</select>
	<select id="getNoAbstractArticleId" resultType="int">
		select id  from blog_article where abstractContent='' or abstractContent is null
	</select>
    <select id="getById" resultMap="article">
        select 
        <include refid="Base_Column_List" />
        from blog_article a left join blog_category c on a.categoryId=c.id
        where a.status !=-1 and a.id= #{articleId}  
    </select>
    <select id="getRecommendArticleList" resultMap="article">
        select 
        <include refid="article_Column_List" />
        from blog_article a 
        where a.status !=-1 and a.isRecommend= 1 order by a.updateTime desc  limit 5
    </select>
    <select id="getTopReadArticleList" resultMap="article">
        select 
        <include refid="article_Column_List" />
        from blog_article a where a.status !=-1
        order by a.viewCount desc  limit 5
    </select>
     <insert id="saveArticle"  useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		 <selectKey resultType="int" order="AFTER" keyProperty="id">
			 SELECT LAST_INSERT_ID()  as id
		 </selectKey>
		  insert into blog_article (title,abstractContent,categoryId,categoryCode,author,publishTime,articleTags,openComment,articleType,editorType,isRecommend,status,showStyle,createTime,updateTime)
		  values (#{title},#{abstractContent},#{categoryId},#{categoryCode},#{author},#{publishTime},#{articleTags},#{openComment},#{articleType},#{editorType},#{isRecommend},#{status},#{showStyle},#{createTime},#{updateTime})
	</insert>
	<insert id="saveContent">
		  insert into blog_article_detail (articleId,content,createTime,updateTime)
		  values (#{articleId},#{content},#{createTime},#{updateTime})
	</insert>
	<insert id="saveImage" parameterType="java.util.List" >
		insert into blog_article_file (articleId,coverImage,createTime,updateTime)
		values
		<foreach collection="list" item="item" separator=",">
			(#{item.articleId},#{item.coverImage},#{item.createTime},#{item.updateTime})
		</foreach>
	</insert>
	<update id="updateArticle">
		  update blog_article 
		  <set>
		      articleTags=#{articleTags},
			  title = #{title},
			  abstractContent=#{abstractContent},
			  categoryId=#{categoryId},
			  categoryCode=#{categoryCode},
			  showStyle=#{showStyle},
			  articleType=#{articleType},
			  editorType=#{editorType},
			  author=#{author},
			  publishTime=#{publishTime},
			  openComment=#{openComment},
			  isRecommend=#{isRecommend},
			  status=#{status},
			  updateTime=#{updateTime}
		  </set>
			where id = #{id}
	</update>
	<update id="deleteArticle">
		  update blog_article set  status=-1,updateTime=NOW() where id = #{articleId}
	</update>
	<update id="updateAbstractById">
		  update blog_article set  abstractContent=#{abstractContent},updateTime=NOW() where id = #{articleId}
	</update>
	<delete id="deleteContent">
		delete from blog_article_detail  where articleId = #{articleId}
	</delete>
	<delete id="deleteImage">
		delete from blog_article_file  where articleId = #{articleId}
	</delete>
	<update id="updateArticleViewCount">
		  update blog_article set  viewCount=viewCount+ #{viewCount} where id = #{articleId}
	</update>
	<update id="updateArticleTags">
		  update blog_article set  articleTags= #{articleTags} where id = #{articleId}
	</update>
</mapper>
